<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="rspec" tests="42" skipped="0" failures="0" errors="0" time="14.658971" timestamp="2022-03-23T13:29:09+01:00" hostname="christophe-linux">
<properties>
<property name="seed" value="2103"/>
</properties>
<testcase classname="spec.models.article_spec" name="Article associations is expected to belong to category required: true" file="./spec/models/article_spec.rb" time="0.282323"></testcase>
<testcase classname="spec.models.article_spec" name="Article associations is expected to belong to post required: true" file="./spec/models/article_spec.rb" time="0.012945"></testcase>
<testcase classname="spec.models.category_spec" name="Category is valid with valid attributes" file="./spec/models/category_spec.rb" time="0.027049"></testcase>
<testcase classname="spec.models.category_spec" name="Category is not valid without a name" file="./spec/models/category_spec.rb" time="0.014205"></testcase>
<testcase classname="spec.models.post_spec" name="Post is valid with attributes" file="./spec/models/post_spec.rb" time="0.089742"></testcase>
<testcase classname="spec.models.post_spec" name="Post is not valid without title" file="./spec/models/post_spec.rb" time="0.042930"></testcase>
<testcase classname="spec.models.post_spec" name="Post is not valid without content" file="./spec/models/post_spec.rb" time="0.045204"></testcase>
<testcase classname="spec.models.post_spec" name="Post is not valid without published" file="./spec/models/post_spec.rb" time="0.044278"></testcase>
<testcase classname="spec.models.post_spec" name="Post is not valid without published_at" file="./spec/models/post_spec.rb" time="0.042383"></testcase>
<testcase classname="spec.models.post_spec" name="Post is expected to belong to user required: true" file="./spec/models/post_spec.rb" time="0.051814"></testcase>
<testcase classname="spec.models.post_spec" name="Post is expected to have many categories" file="./spec/models/post_spec.rb" time="0.031599"></testcase>
<testcase classname="spec.models.user_spec" name="User is valid with valid attributes" file="./spec/models/user_spec.rb" time="0.231894"></testcase>
<testcase classname="spec.models.user_spec" name="User is not valid without a name" file="./spec/models/user_spec.rb" time="0.222523"></testcase>
<testcase classname="spec.models.user_spec" name="User is not valid without an email" file="./spec/models/user_spec.rb" time="0.215801"></testcase>
<testcase classname="spec.models.user_spec" name="User is not valid without a password" file="./spec/models/user_spec.rb" time="0.219378"></testcase>
<testcase classname="spec.models.user_spec" name="User is expected to allow :email to be ‹&quot;user@example.com&quot;›" file="./spec/models/user_spec.rb" time="0.213920"></testcase>
<testcase classname="spec.models.user_spec" name="User is expected not to allow :email to be ‹&quot;not-an-email&quot;›" file="./spec/models/user_spec.rb" time="0.219785"></testcase>
<testcase classname="spec.models.user_spec" name="User is expected to have many posts" file="./spec/models/user_spec.rb" time="0.214359"></testcase>
<testcase classname="spec.requests.articles_request_spec" name="ArticlesController show articles from category" file="./spec/requests/articles_request_spec.rb" time="0.066885"></testcase>
<testcase classname="spec.requests.articles_request_spec" name="ArticlesController show article" file="./spec/requests/articles_request_spec.rb" time="0.314703"></testcase>
<testcase classname="spec.requests.articles_request_spec" name="ArticlesController show category" file="./spec/requests/articles_request_spec.rb" time="0.051041"></testcase>
<testcase classname="spec.requests.articles_request_spec" name="ArticlesController show categories" file="./spec/requests/articles_request_spec.rb" time="0.070103"></testcase>
<testcase classname="spec.requests.authorization_request_spec" name="Authorization gives you an authentication code if you are an existing user and you satisfy the password" file="./spec/requests/authorization_request_spec.rb" time="0.488268"></testcase>
<testcase classname="spec.requests.categories_request_spec" name="CategoriesController get all categories" file="./spec/requests/categories_request_spec.rb" time="0.505817"></testcase>
<testcase classname="spec.requests.categories_request_spec" name="CategoriesController create a category" file="./spec/requests/categories_request_spec.rb" time="0.526179"></testcase>
<testcase classname="spec.requests.categories_request_spec" name="CategoriesController cannot create a category with wrong parameter" file="./spec/requests/categories_request_spec.rb" time="0.534898"></testcase>
<testcase classname="spec.requests.categories_request_spec" name="CategoriesController show a category" file="./spec/requests/categories_request_spec.rb" time="0.533696"></testcase>
<testcase classname="spec.requests.categories_request_spec" name="CategoriesController update a category name" file="./spec/requests/categories_request_spec.rb" time="0.544667"></testcase>
<testcase classname="spec.requests.categories_request_spec" name="CategoriesController destroy a category" file="./spec/requests/categories_request_spec.rb" time="0.537588"></testcase>
<testcase classname="spec.requests.posts_request_spec" name="PostsController get all posts from index" file="./spec/requests/posts_request_spec.rb" time="0.514981"></testcase>
<testcase classname="spec.requests.posts_request_spec" name="PostsController create a post" file="./spec/requests/posts_request_spec.rb" time="0.563369"></testcase>
<testcase classname="spec.requests.posts_request_spec" name="PostsController not create with wrong parameter" file="./spec/requests/posts_request_spec.rb" time="0.539756"></testcase>
<testcase classname="spec.requests.posts_request_spec" name="PostsController show a post" file="./spec/requests/posts_request_spec.rb" time="0.776672"></testcase>
<testcase classname="spec.requests.posts_request_spec" name="PostsController not show a wrong post" file="./spec/requests/posts_request_spec.rb" time="0.492293"></testcase>
<testcase classname="spec.requests.posts_request_spec" name="PostsController update a post" file="./spec/requests/posts_request_spec.rb" time="0.810330"></testcase>
<testcase classname="spec.requests.posts_request_spec" name="PostsController update a post with wrong parameters" file="./spec/requests/posts_request_spec.rb" time="0.829839"></testcase>
<testcase classname="spec.requests.posts_request_spec" name="PostsController not update a wrong post" file="./spec/requests/posts_request_spec.rb" time="0.513693"></testcase>
<testcase classname="spec.requests.posts_request_spec" name="PostsController publish a post" file="./spec/requests/posts_request_spec.rb" time="0.820140"></testcase>
<testcase classname="spec.requests.posts_request_spec" name="PostsController publish a wrong post" file="./spec/requests/posts_request_spec.rb" time="0.522608"></testcase>
<testcase classname="spec.requests.posts_request_spec" name="PostsController destroy a post" file="./spec/requests/posts_request_spec.rb" time="0.852056"></testcase>
<testcase classname="spec.requests.posts_request_spec" name="PostsController not destroy a wrong post" file="./spec/requests/posts_request_spec.rb" time="0.508342"></testcase>
<testcase classname="spec.requests.users_request_spec" name="UsersController show current user" file="./spec/requests/users_request_spec.rb" time="0.499742"></testcase>
</testsuite>
